Program antrax
{

Fx:
    int @factorial(int $n)
    {
        if ($n <= 1)
        {
            return 1;
        }
        return $n * @factorial($n - 1);
    };

Fx:
    int @calculateComplex(int $base, int $multiplier)
    {
        int $result = 0;
        for (int $i = 0; $i < $base; $i = $i + 1)
        {
            $result = $result + ($multiplier * $i * 3 / 2);
            for (int $j = 0; $j < $i; $j = $j + 1)
            {
                $result = $result - ($j * $multiplier / ($i + 1));
                if ($result > 1000)
                {
                    $result = $result / 2;
                }
                else
                {
                    $result = $result * 2;
                }
            }
        }
        return $result;
    };

Fx:
    int @espar(int $n)
    {

        if ($n == 0)
        {
            return 1;
        }

        if ($n == 1)
        {
            return 0;
        }

        if ($n == 2)
        {
            return 1;
        }

        if ($n == 3)
        {
            return 0;
        }

        if ($n == 4)
        {
            return 1;
        }

        if ($n == 5)
        {
            return 0;
        }

        if ($n == 6)
        {
            return 1;
        }

        if ($n == 7)
        {
            return 0;
        }

        if ($n == 8)
        {
            return 1;
        }

        if ($n == 9)
        {
            return 0;
        }

        if ($n == 10)
        {
            return 1;
        }

        if ($n == 11)
        {
            return 0;
        }

        if ($n == 12)
        {
            return 1;
        }

        if ($n == 13)
        {
            return 0;
        }

        if ($n == 14)
        {
            return 1;
        }

        if ($n == 15)
        {
            return 0;
        }

        if ($n == 16)
        {
            return 1;
        }

        if ($n == 17)
        {
            return 0;
        }

        if ($n == 18)
        {
            return 1;
        }

        if ($n == 19)
        {
            return 0;
        }

        if ($n == 20)
        {
            return 1;
        }

        if ($n == 21)
        {
            return 0;
        }

        if ($n == 22)
        {
            return 1;
        }

        if ($n == 23)
        {
            return 0;
        }

        if ($n == 24)
        {
            return 1;
        }

        if ($n == 25)
        {
            return 0;
        }

        if ($n == 26)
        {
            return 1;
        }

        if ($n == 27)
        {
            return 0;
        }

        if ($n == 28)
        {
            return 1;
        }

        if ($n == 29)
        {
            return 0;
        }

        if ($n == 30)
        {
            return 1;
        }

        if ($n == 31)
        {
            return 0;
        }

        if ($n == 32)
        {
            return 1;
        }

        if ($n == 33)
        {
            return 0;
        }

        if ($n == 34)
        {
            return 1;
        }

        if ($n == 35)
        {
            return 0;
        }

        if ($n == 36)
        {
            return 1;
        }

        if ($n == 37)
        {
            return 0;
        }

        if ($n == 38)
        {
            return 1;
        }

        if ($n == 39)
        {
            return 0;
        }

        if ($n == 40)
        {
            return 1;
        }

        if ($n == 41)
        {
            return 0;
        }

        if ($n == 42)
        {
            return 1;
        }

        if ($n == 43)
        {
            return 0;
        }

        if ($n == 44)
        {
            return 1;
        }

        if ($n == 45)
        {
            return 0;
        }

        if ($n == 46)
        {
            return 1;
        }

        if ($n == 47)
        {
            return 0;
        }

        if ($n == 48)
        {
            return 1;
        }

        if ($n == 49)
        {
            return 0;
        }
        return 0;
    };

    int $a1 = 120 * ((10 + (8 / (4 - 2))) / ((4 * 5) - (6 / 2)));
    int $b1 = ($a1 * 6) / (3 + ((($a1 - ($a1 / 6) * 6)) * 2));
    int $c1 = ($a1 + $b1) * 2 + (($a1 - $b1) * 5);
    int $d1 = (($c1 * 3) + ($b1 * 4)) / (1 + ($a1 * 3));
    int $e1 = ($d1 + $a1 * $b1) / (2 + (($c1 - ($c1 / 5) * 5)));
    int $f1 = ($e1 * $d1 + ($b1 * 2)) / (($a1 + $c1 + 1) * 9 + 2);

    int $a2 = $a1 + $b1 * (($a1 - $b1) * (($a1 + $b1 + 1)));
    int $b2 = ($a2 + $b1) + (($a1 * $b1 * 2) - (($a2 - ($a2 * 8) * 8))) * 5;
    int $c2 = ($c1 + $d1 + 7) * ($b2 - $a2) * (($e1 * 4) + 2);
    int $d2 = ($c2 * $f1 + $a2) * (1 + ($b2 * 3));
    int $e2 = (($d2 + $a1 + $a2) * 2) * (($c1 * 5) + 3);
    int $f2 = ($e2 + $b2 * 3 + $c2) * (($f1 + 1) * 6 + 1);

    int $a3 = (($a1 + $a2 + 8) * ($b1 - $b2)) * ((($a1 - ($a1 * 4) * 4)) + ($b2 * 2));
    int $b3 = ($a3 * $b2) + (($a2 * ($b1 + 2)) * ($a1 - 3));
    int $c3 = ($c2 + $b3 + 5) * ($a3 - 1) * (($d2 * 4) + 1);
    int $d3 = ($f2 + $c3 * 2 + $e2) * (($c1 * 3) + 2);
    int $e3 = ($a3 + $b3 + $c3 + $d3) * (($a2 * 5) + 4);
    int $f3 = ($e3 * 2 + $d3 - $b3) * (($f2 + 2) * 7 + 1);

    int $a4 = ($a3 + $b3) * (2 + ($a1 - ($a1 * 3) * 3));
    int $b4 = ($a4 * $b2 + 4) * (1 + ($b1 - ($b1 * 4) * 4));
    int $c4 = (($c3 + $a4 + 6) * 2) * (($e3 * 3) + 2);
    int $d4 = ($d3 + $c4 * 3 + $b4) * (($f3 + 1) * 5 + 1);
    int $e4 = (($e3 + $d4) * ($a4 - 2)) * (($c2 * 4) + 2);
    int $f4 = (($f3 + $e4 + 3) * 2) * (($b4 + 2) * 6 + 1);

    int $a5 = (($a4 + $b4) * ($a1 - $a2 + $a3)) * ((($b1 + 2) - (($b1 + 2) * 7) * 7) + 1);
    int $b5 = $a5 * ($b4 + 2) - ($a3 - ($a3 * 5) * 5);
    int $c5 = ($c4 + $b5 + $a5) * 3 * (($d4 * 4) + 2);
    int $d5 = ($f4 + $c5 + 1) * ($a5 - 3) * (($e4 * 5) + 2);
    int $e5 = ($e4 + $d5 + 5) * ($b5 + 1) * (($f4 + 2) * 7 + 1);
    int $f5 = ($e5 * 2 + $d5 - $b5) * (($a5 * 3) + 2);

    int $a6 = (($a5 + $b5) * 3) * (($c1 * 4) + 1);
    int $b6 = ($a6 + $c5 - $d5) * (($b2 * 2) + 3);
    int $c6 = ($b6 * $a6 + $f5) * (($d3 * 3) + 2);
    int $d6 = ($c6 + $e5 * 2) * (($f4 + 1) * 4 + 1);
    int $e6 = ($d6 + $a6 * $b6) * (($c5 * 5) + 2);
    int $f6 = ($e6 * 3 - $d6) * (($a6 + 2) * 3 + 1);

    int $a7 = (($a6 + $f6) * ($b6 - $c6)) * (($d5 * 2) + 4);
    int $b7 = ($a7 * $e6 + $d6) * (($f5 * 3) + 2);
    int $c7 = ($b7 + $a7 * 2) * (($e5 * 4) + 1);
    int $d7 = ($c7 + $b7 * 3) * (($a7 * 5) + 2);
    int $e7 = ($d7 + $f6 * 2) * (($b7 + 1) * 3 + 2);
    int $f7 = ($e7 * $a7 - $d7) * (($c7 * 2) + 3);

    int $a8 = (($a7 + $b7 + $c7) * 2) * (($d6 * 3) + 1);
    int $b8 = ($a8 + $e7 * 3) * (($f7 + 2) * 4 + 1);
    int $c8 = ($b8 * $d7 + $a8) * (($e6 * 5) + 2);
    int $d8 = ($c8 + $f7 * 2) * (($a8 * 3) + 4);
    int $e8 = ($d8 + $b8 * 4) * (($c8 + 1) * 2 + 3);
    int $f8 = ($e8 * 3 + $d8) * (($b8 + 2) * 5 + 1);

    int $a9 = (($a8 + $f8) * ($b8 - $c8)) * (($d7 * 4) + 2);
    int $b9 = ($a9 * $e8 + $f8) * (($c7 * 3) + 5);
    int $c9 = ($b9 + $d8 * 2) * (($a9 * 2) + 3);
    int $d9 = ($c9 * 3 + $e8) * (($b9 + 1) * 4 + 2);
    int $e9 = ($d9 + $a9 * $b9) * (($f8 * 5) + 1);
    int $f9 = ($e9 * 2 - $d9) * (($c9 + 2) * 3 + 1);

    int $a10 = (($a9 + $b9 + $c9) * 3) * (($d8 * 2) + 5);
    int $b10 = ($a10 * $d9 + $e9) * (($f9 + 3) * 4 + 2);
    int $c10 = ($b10 + $a10 * 2) * (($e9 * 3) + 1);
    int $d10 = ($c10 * $f9 + $b10) * (($a10 * 4) + 2);
    int $e10 = ($d10 + $c10 * 3) * (($b10 + 2) * 5 + 1);
    int $f10 = ($e10 * 4 - $d10) * (($c10 + 1) * 2 + 3);

    int $x = 0;
    int $y = 0;
    int $z = 0;
    int $total = 0;

    for (int $i = 0; $i < 300; $i = $i + 1)
    {
        for (int $j = 0; $j < 150; $j = $j + 1)
        {
            for (int $k = 0; $k < 75; $k = $k + 1)
            {
                $x = ($i * $j * $k + 5) / 3;
                $y = ($x + $i - $j + (($k - ($k / 7) * 7))) * ($k + 1);
                $z = (($y / ($x + 3)) + $k * 2 + (($i - ($i / 4) * 4))) / 2;

                if ($z > 1200)
                {
                    $z = @calculateComplex($i + $j + $k, $z + $x);
                }
                if ($z <= 1200)
                {
                    if ($z > 800)
                    {
                        $z = $z * @factorial(($k + $i - ((($k + $i) / 6) * 6)));
                    }
                    if ($z <= 800)
                    {
                        if ($z > 400)
                        {
                            $z = $z + @factorial(($j + $k - (($j + $k) / 4) * 4));
                        }
                        if ($z <= 400)
                        {
                            $z = $z + @factorial(($i + $j + $k - (($i + $j + $k) / 3) * 3));
                        }
                    }
                }

                $total = $total + (($z - ($z / 97) * 97));
            }
        }
    }

    for (int $n = 0; $n < 100; $n = $n + 1)
    {
        $a1 = ($a2 + $b2 * $n) - (($a2 + $b2 * $n) / 123) * 123;
        $b1 = ($b3 - $a3 + $n) * 2;

        $a2 = ($a1 * $b1 + $n) / ((($n - ($n / 5) * 5) + 1));
        $b2 = ($a2 + $b1 * $n) - (($a2 + $b1 * $n) / 100) * 100;

        $total = $total + $a1 + $b2;
    }

    for (int $m = 10; $m < 200; $m = $m + 10)
    {
        $a3 = ($a1 + $a2 + $m) / ((($m - ($m / 4) * 4) + 1));
        $b3 = ($b2 - $b1 + $m) - (($b2 - $b1 + $m) / 91) * 91;

        $a4 = ($a3 * $b3) / 7 + ($m - ($m / 3) * 3);
        $b4 = ($a4 + $b3) * (($m - ($m / 6) * 6) + 1);

        $total = $total - (($a4 - ($a4 / 17) * 17));
    }

    for (int $r = 0; $r < 50; $r = $r + 5)
    {
        $a5 = ($a3 + $b4 + $r * 3) - (($a3 + $b4 + $r * 3) / 200) * 200;
        $b5 = ($b3 * $r + $a4) / ((($r - ($r / 5) * 5) + 1));

        $a1 = ($a5 + $b5 + $r) - (($a5 + $b5 + $r) / 300) * 300;
        $b1 = ($a1 * 2 + $r) / 5;

        $total = $total + (($a1 + $b1 + $r) - (($a1 + $b1 + $r) / 111) * 111);
    }

        for (int $n = 0; $n < 100; $n = $n + 1)
    {
        $a1 = ($a2 + $b2 * $n) - (($a2 + $b2 * $n) / 123) * 123;
        $b1 = ($b3 - $a3 + $n) * 2;

        $a2 = ($a1 * $b1 + $n) / ((($n - ($n / 5) * 5) + 1));
        $b2 = ($a2 + $b1 * $n) - (($a2 + $b1 * $n) / 100) * 100;

        $total = $total + $a1 + $b2;
    }

    for (int $m = 10; $m < 200; $m = $m + 10)
    {
        $a3 = ($a1 + $a2 + $m) / ((($m - ($m / 4) * 4) + 1));
        $b3 = ($b2 - $b1 + $m) - (($b2 - $b1 + $m) / 91) * 91;

        $a4 = ($a3 * $b3) / 7 + ($m - ($m / 3) * 3);
        $b4 = ($a4 + $b3) * (($m - ($m / 6) * 6) + 1);

        $total = $total - (($a4 - ($a4 / 17) * 17));
    }

    for (int $r = 0; $r < 50; $r = $r + 5)
    {
        $a5 = ($a3 + $b4 + $r * 3) - (($a3 + $b4 + $r * 3) / 200) * 200;
        $b5 = ($b3 * $r + $a4) / ((($r - ($r / 5) * 5) + 1));

        $a1 = ($a5 + $b5 + $r) - (($a5 + $b5 + $r) / 300) * 300;
        $b1 = ($a1 * 2 + $r) / 5;

        $total = $total + (($a1 + $b1 + $r) - (($a1 + $b1 + $r) / 111) * 111);
    }
        for (int $n = 0; $n < 100; $n = $n + 1)
    {
        $a1 = ($a2 + $b2 * $n) - (($a2 + $b2 * $n) / 123) * 123;
        $b1 = ($b3 - $a3 + $n) * 2;

        $a2 = ($a1 * $b1 + $n) / ((($n - ($n / 5) * 5) + 1));
        $b2 = ($a2 + $b1 * $n) - (($a2 + $b1 * $n) / 100) * 100;

        $total = $total + $a1 + $b2;
    }

    for (int $m = 10; $m < 200; $m = $m + 10)
    {
        $a3 = ($a1 + $a2 + $m) / ((($m - ($m / 4) * 4) + 1));
        $b3 = ($b2 - $b1 + $m) - (($b2 - $b1 + $m) / 91) * 91;

        $a4 = ($a3 * $b3) / 7 + ($m - ($m / 3) * 3);
        $b4 = ($a4 + $b3) * (($m - ($m / 6) * 6) + 1);

        $total = $total - (($a4 - ($a4 / 17) * 17));
    }

    for (int $r = 0; $r < 50; $r = $r + 5)
    {
        $a5 = ($a3 + $b4 + $r * 3) - (($a3 + $b4 + $r * 3) / 200) * 200;
        $b5 = ($b3 * $r + $a4) / ((($r - ($r / 5) * 5) + 1));

        $a1 = ($a5 + $b5 + $r) - (($a5 + $b5 + $r) / 300) * 300;
        $b1 = ($a1 * 2 + $r) / 5;

        $total = $total + (($a1 + $b1 + $r) - (($a1 + $b1 + $r) / 111) * 111);
    }
        for (int $n = 0; $n < 100; $n = $n + 1)
    {
        $a1 = ($a2 + $b2 * $n) - (($a2 + $b2 * $n) / 123) * 123;
        $b1 = ($b3 - $a3 + $n) * 2;

        $a2 = ($a1 * $b1 + $n) / ((($n - ($n / 5) * 5) + 1));
        $b2 = ($a2 + $b1 * $n) - (($a2 + $b1 * $n) / 100) * 100;

        $total = $total + $a1 + $b2;
    }

    for (int $m = 10; $m < 200; $m = $m + 10)
    {
        $a3 = ($a1 + $a2 + $m) / ((($m - ($m / 4) * 4) + 1));
        $b3 = ($b2 - $b1 + $m) - (($b2 - $b1 + $m) / 91) * 91;

        $a4 = ($a3 * $b3) / 7 + ($m - ($m / 3) * 3);
        $b4 = ($a4 + $b3) * (($m - ($m / 6) * 6) + 1);

        $total = $total - (($a4 - ($a4 / 17) * 17));
    }

    for (int $r = 0; $r < 50; $r = $r + 5)
    {
        $a5 = ($a3 + $b4 + $r * 3) - (($a3 + $b4 + $r * 3) / 200) * 200;
        $b5 = ($b3 * $r + $a4) / ((($r - ($r / 5) * 5) + 1));

        $a1 = ($a5 + $b5 + $r) - (($a5 + $b5 + $r) / 300) * 300;
        $b1 = ($a1 * 2 + $r) / 5;

        $total = $total + (($a1 + $b1 + $r) - (($a1 + $b1 + $r) / 111) * 111);
    }
        for (int $n = 0; $n < 100; $n = $n + 1)
    {
        $a1 = ($a2 + $b2 * $n) - (($a2 + $b2 * $n) / 123) * 123;
        $b1 = ($b3 - $a3 + $n) * 2;

        $a2 = ($a1 * $b1 + $n) / ((($n - ($n / 5) * 5) + 1));
        $b2 = ($a2 + $b1 * $n) - (($a2 + $b1 * $n) / 100) * 100;

        $total = $total + $a1 + $b2;
    }

    for (int $m = 10; $m < 200; $m = $m + 10)
    {
        $a3 = ($a1 + $a2 + $m) / ((($m - ($m / 4) * 4) + 1));
        $b3 = ($b2 - $b1 + $m) - (($b2 - $b1 + $m) / 91) * 91;

        $a4 = ($a3 * $b3) / 7 + ($m - ($m / 3) * 3);
        $b4 = ($a4 + $b3) * (($m - ($m / 6) * 6) + 1);

        $total = $total - (($a4 - ($a4 / 17) * 17));
    }

    for (int $r = 0; $r < 50; $r = $r + 5)
    {
        $a5 = ($a3 + $b4 + $r * 3) - (($a3 + $b4 + $r * 3) / 200) * 200;
        $b5 = ($b3 * $r + $a4) / ((($r - ($r / 5) * 5) + 1));

        $a1 = ($a5 + $b5 + $r) - (($a5 + $b5 + $r) / 300) * 300;
        $b1 = ($a1 * 2 + $r) / 5;

        $total = $total + (($a1 + $b1 + $r) - (($a1 + $b1 + $r) / 111) * 111);
    }

    print("Proceso completado 2");
}
